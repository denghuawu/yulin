<?php

namespace backend\controllers;

use Yii;
use backend\models\User;
use backend\models\Admin;
use backend\models\UserSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\web\UploadedFile;
use common\models\Region;
use backend\models\Rank;
use common\models\common\models;
use yii\helpers\Html;


/**
 * UserController implements the CRUD actions for User model.
 */
class UserController extends Controller
{
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['post','get'],
                ],
            ],
        ];
    }

    /**
     * Lists all User models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new UserSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);
        $dataProvider->pagination = ['pagesize' => '10'];

        return $this->renderPartial('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }


    /**
     * Creates a new User model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new User();
        // 指定场景
        $model->scenario = 'create';
        if ($model->load(Yii::$app->request->post())) {

        	if(!empty($_FILES['User']['name']['figure'])){
        		
        		$dir = ROOT_PATH.'common/upload/figure';	// 指定上传目录
        		$model->file = UploadedFile::getInstance($model, 'figure');
        		$ext = $model->file->extension;
        		$file_name = rand_name($ext);
        		$img_name = $dir.'/'.$file_name;
        		
        		if (file_exists($img_name)) {
        			$img_name = $dir.'/'.rand_name($ext);
        		}
        		$model->file->saveAs($img_name);
        		$model->figure = $file_name;
        	}
        	
        	
        	if ($model->save()) {
        		return $this->redirect(['index']);
        	}
        }
        
        return $this->renderPartial('create', [
             'model' => $model,
             'rank_list' => Rank::rank_list(),
             'manager_list' => User::manager_list(),
        	 'admin_user' => Admin::get_role_admin(),
        	 'city_option' => [''=>'请选择'],
        ]);
        
    }

    /**
     * Updates an existing User model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param string $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        // 指定场景
        $model->setScenario('update');
        $model->tmp_figure = $model->figure;
        if ($model->load(Yii::$app->request->post())) {
        	
        	if(!empty($_FILES['User']['name']['figure'])){
        	
        		$dir = ROOT_PATH.'common/upload/figure';	// 指定上传目录
        		$model->file = UploadedFile::getInstance($model, 'figure');
        		$ext = $model->file->extension;
        		$file_name = rand_name($ext);
        		$img_name = $dir.'/'.$file_name;
        	
        		if (file_exists($img_name)) {
        			$img_name = $dir.'/'.rand_name($ext);
        		}
        		$model->file->saveAs($img_name);
        		$model->figure = $file_name;
        	}
        	$model->flag = 1;
        	if ($model->update()) {
        		return $this->redirect(['index']);
        	}

        }
       
        $model->confirm_password = $model->password;
        return $this->renderPartial('create', [
        		'model' => $model,
        		'rank_list' => Rank::rank_list(),
        		'manager_list' => User::manager_list(),
        		'admin_user' => Admin::get_role_admin(),
        		'city_option' => [$model->city=>Region::region_name(0,$model->city)],
        ]);
    }

    /**
     * Deletes an existing User model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param string $id
     * @return mixed
     */
    public function actionDelete($id)
    {
    	// 删除会员，同时删除会员头像
        $model = $this->findModel($id);
        $file = COMMON_PATH.'upload/figure/'.$model->figure;
        $model->delete();
        
        if(file_exists($file)){
        	unlink($file);
        }

        return $this->redirect(['index']);
    }

    /**
     * Finds the User model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param string $id
     * @return User the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = User::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
    
    // 地区联动
    public function actionRegion($parent_id)
    {
		
    	$model = Region::region_list($parent_id);
    	 
    	foreach($model as $value=>$name)
    	{
    		echo Html::tag('option',Html::encode($name),array('value'=>$value));
    	}
    }
    
    /* // 全国联动处理
    public function  actionRegion($id)
    {
    	$count = Region::find()
    	->where(['parent_id' =>$id])
    	->count();
    	$regions = Region::find()
    	->where(['parent_id' =>$id])
    	->all();
    	if ($count > 0) {
    		foreach ($regions as $region) {
    			echo "<option value='" . $region->region_id . "'>" . $region->region_name . "</option>;";
    		}
    	} else {
    		echo "<option>-</option>;";
    	}
    } */
}
