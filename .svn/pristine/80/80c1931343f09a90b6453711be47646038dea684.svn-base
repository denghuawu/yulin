<?php

namespace frontend\models;

use Yii;
use yii\db\ActiveRecord;
use frontend\models\Goods;
use frontend\models\Cart;
use yii\db\Connection;
use yii\db\Transaction;
use frontend\models\Comment;
use frontend\models\User;
use backend\models\OrderGoods;
use common\models\Shipping;
use frontend\models\Refund;

/**
 * This is the model class for table "{{%brand}}".
 *
 * @property integer $brand_id
 * @property integer $parent_id
 * @property string $brand_name
 * @property string $brand_logo
 * @property string $brand_desc
 * @property integer $sort_order
 * @property integer $is_show
 */
class OrderInfo extends ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%order_info}}';
    }
    
    /**
     * 取出当前会员的购物车商品
     * @return unknown
     */
    public function get_cart_info(){
    	$sql = "SELECT c.cart_id,c.goods_number AS buy_number,c.add_time,g.goods_id,g.goods_price,g.goods_name,g.goods_img,
    			g.goods_number,b.brand_name
    			FROM cm_cart AS c LEFT JOIN cm_goods AS g ON c.goods_id=g.goods_id LEFT JOIN cm_brand AS b ON g.brand_id=b.brand_id 
    			WHERE c.user_id=".$_SESSION['frontend']['user_id'];
    	$res = self::findBySql($sql)->asArray()->all();
    	return $res;
    }
    
    /**
     * 生成订单（生成订单信息=>根据订单id生成订单商品=>减库存=>删除相关购物车商品）
     */
    public function make_order($cart){
    	
    	// 对每个商品检查库存
    	foreach ($cart as $val){
    		if($val['goods_id']>0){
    			if($val['buy_number'] > $val['goods_number'])
    				 return false;
    		}
    	}
    	
    	// 启用事务处理
    	$connection=Yii::$app->db;
    	$transaction = $connection->beginTransaction();
    	$orderModel = new OrderInfo();
    	try {
    		
    		// 生成订单信息
    		$sql1 = "INSERT INTO cm_order_info(order_sn,user_id,parent_id,order_status,address,goods_amount,order_amount,shipping_fee
    				,add_time,pay_time,message) VALUES(:order_sn,:user_id,:parent_id,:order_status,:address,:goods_amount,:order_amount,
    				:shipping_fee,:add_time,:pay_time,:message)";
    		$order_sn = get_order_sn();
    		$time = time();
    		$status = PAYED;
    		$parent_id = User::findOne($_SESSION['frontend']['user_id'])->parent_id;
    		$command = $connection->createCommand($sql1);
    		$command->bindParam(":order_sn",$order_sn);
    		$command->bindParam(":user_id",$_SESSION['frontend']['user_id']);
    		$command->bindParam(":parent_id", $parent_id);
    		$command->bindParam(":order_status",$status);
    		$command->bindParam(":address",$cart['other']['address']);
    		$command->bindParam(":goods_amount",$cart['other']['goods_amount']);
    		$command->bindParam(":order_amount",$cart['other']['total']);
    		$command->bindParam(":shipping_fee",$cart['other']['shipping_fee']);
    		$command->bindParam(":add_time",$time);
    		$command->bindParam(":pay_time",$time);
    		$command->bindParam(":message",$cart['other']['message']);
    		$command->execute();
    		$order_id = Yii::$app->db->getLastInsertID();
    		
    		// 生成订单商品
    		foreach ($cart as $val){
    			if($val['goods_id']<1){
    				continue;
    			}
    			
	    		$sql2 = "INSERT INTO cm_order_goods(order_id,goods_id,goods_number,goods_price,goods_amount,cat_id,brand_id) 
	    				VALUES(:order_id,:goods_id,:goods_number,:goods_price,:goods_amount,:cat_id,:brand_id)";
	    		$goods_amount = $val['buy_number']*$val['goods_price'];
	    		$command = $connection->createCommand($sql2);
	    		$command->bindParam(":order_id",$order_id);
	    		$command->bindParam(":goods_id",$val['goods_id']);
	    		$command->bindParam(":goods_number",$val['buy_number']);
	    		$command->bindParam(":goods_price",$val['goods_price']);
	    		$command->bindParam(":goods_amount",$goods_amount);
	    		$command->bindParam(":cat_id",$val['cat_id']);
	    		$command->bindParam(":brand_id",$val['brand_id']);
	    		$command->execute();
	    		
	    		// 减库存，加销量
	    		$new_num = intval($goods->goods_number)-intval($val['buy_number']);
	    		$sql = "UPDATE cm_goods SET goods_number=:number,goods_sell=:sell WHERE goods_id=:id";
	    		$command = $connection->createCommand($sql);
	    		$command->bindParam(":number",$new_num);
	    		$command->bindParam(":sell",$val['buy_number']);
	    		$command->bindParam(":id",$val['goods_id']);
	    		$command->execute();
	    		
	    		$cid .= $val['cart_id'].',';
    		}
    		//删除购物车相关商品
    		$cid = rtrim($cid, ',');
    		$sql = "DELETE FROM cm_cart WHERE cart_id IN(:id)";
    		$command = $connection->createCommand($sql);
    		$command->bindParam(":id",$cid);
    		$command->execute();

    		$transaction->commit();
    		
    		return $order_id;
    		
    	} catch (Exception $e) {
    		$transaction->rollBack();
    	}
    	return false;
    }
    
    /**
     * 获取订单列表
     * @param unknown $status
     * @return unknown
     */
    public function get_order_list($status=0){
    	
    	$status = $status>0 ? ' AND order_status='.$status : '';
  
    	$pager = get_pager($this->order_record($status),$data['page'],3);
    	$limit = ' LIMIT '.$pager['start'].','.$pager['size'];
    	
    	$sql = "SELECT order_id,order_sn,order_amount,order_status,confirm_time FROM cm_order_info WHERE user_id={$_SESSION['frontend']['user_id']} {$status} 
    				ORDER BY add_time DESC ".$limit;
    	
    	$res = self::findBySql($sql)->asArray()->all();
    	if($res){
    		foreach ($res as &$val){
    			
    			$sql = "SELECT g.goods_id,g.goods_name,g.goods_img,o.goods_number,o.goods_price FROM cm_goods AS g,cm_order_goods AS o 
    					WHERE o.goods_id=g.goods_id AND o.order_id={$val['order_id']}";
    			$val['order_goods'] = OrderGoods::findBySql($sql)->asArray()->all();
    		
    			// 订单状态
    			$val['status'] = $flag ? chamei_order_status($val) : order_status($val);
    			
    			//检查用户是否参与了评价
    			/* foreach ($val['order_goods'] as $v){
    				$this->check_commect(['confirm_time'=>$val['confirm_time'], 'goods_id'=>$v['goods_id'],'order_id'=>$val['order_id'],'order_status'=>$val['order_status']]);
    			} */
    		}
    		
    		$res['page_count'] = $pager['page_count'];
    	}
    	return $res;
    }
    
    /**
     * 获取订单列表
     * @param unknown $status
     * @return unknown
     */
    public function get_order_info($id){
    	
    	$id = $id>0 ? 'order_id='.$id : '';

    	$sql = "SELECT order_id,order_sn,order_amount,address,order_status,shipping_fee,shipping_id,refund_id FROM cm_order_info WHERE  {$id}";
    	 
    	$res = self::findBySql($sql)->asArray()->one();
    	if($res){

    			$sql = "SELECT g.goods_id,g.goods_name,g.goods_img,o.goods_price,o.goods_number,o.goods_amount FROM cm_goods AS g,cm_order_goods AS o
    			WHERE o.goods_id=g.goods_id AND o.order_id={$res['order_id']}";
    			$res['order_goods'] = OrderGoods::findBySql($sql)->asArray()->all();
    			
    			// 订单状态
    			$res['status'] = order_status($res);
    			// 收货地址
    			$res['address'] = unserialize($res['address']);
    			// 取物流信息
    			if($res['order_status'] > PAYED && $res['shipping_id']>0){
    				$ship = Shipping::findOne($res['shipping_id']);
    				$res['express'] = curl_shipping(['company'=>$ship->shipping_name,'expressNo'=>$ship->shipping_express]);
    			}
    			// 取出退款信息
    			if($res['refund_id'] > 0){
    				$res['refund'] = Refund::find()->where(['refund_id'=>$res['refund_id']])->asArray()->one();
    			}
    			
    	}
    	return $res;
    }
    
    /**
     * 检查用户是否参与了评价
     * @param unknown $arr
     */
    /* public function check_commect($arr){
    	
    	$time = 24*3600*intval($_SESSION['cfg']['comment_time']);	// 多少天不评价，系统自动评价为好评
    	if(intval($arr['confirm_time']) > $time && $arr['order_status'] == FINISHED){
    			$model = new Comment();
    			$model->comment_time = time();
    			$model->comment_score = 1;
    			$model->comment_content = '好评';
    			$model->user_id = $_SESSION['frontend']['user_id'];
    			$model->goods_id = $arr['goods_id'];
    			$model->save(false);
    			
    			$model = new OrderInfo($arr['order_id']);
    			$model->order_status = COMMENTED;
    			$model->save();
    	}
    	return true;
    } */
    
    /**
     * 更新订单状态
     * @param unknown $id
     * @param unknown $status
     * @return boolean
     */
    public static function update_order_status($id,$status){
    	if($id > 0 && $status >0){
    		$order = OrderInfo::findOne($id);
    		$order->order_status = $status;
    		$order->update(false);
    		return true;
    	}
    }
    
    /**
     * 成交记录（昨日、今日、近三个月）
     * @return array
     */
    public function bargain_record($type,$keyword=null,$status=0){
    	
    	// 获得时间段
    	$timer = get_timer($type);
    	$keyword = $keyword ? ' AND (o.order_sn="'.$keyword.'" OR u.user_name="'.$keyword.'")' : '';
    	
    	$status = $status>0 ? ' AND o.order_status='.$status :  ' AND o.order_status IN('.FINISHED.','.COMMENTED.')';
    	$time = $type ? ' AND o.confirm_time BETWEEN '.$timer['start'].' AND '.$timer['end'] : '';

    	$sql = "SELECT o.order_id,o.order_sn,o.order_amount,o.order_status,o.confirm_time FROM
    	 		cm_order_info AS o,cm_users AS u  WHERE u.user_id=o.user_id AND o.parent_id={$_SESSION['frontend']['user_id']} {$status} {$time} {$keyword} 
    			ORDER BY o.confirm_time DESC";
    	
    	$res = self::findBySql($sql)->asArray()->all();
    	
    	if($res){
    		foreach ($res as &$val){
    			 
    			$sql = "SELECT g.goods_id,g.goods_name,b.brand_name,g.goods_img,o.goods_number,o.goods_price FROM cm_goods AS g,cm_order_goods AS o,cm_brand AS b
    			WHERE o.goods_id=g.goods_id AND g.brand_id=b.brand_id AND o.order_id={$val['order_id']}";
    			$val['order_goods'] = OrderGoods::findBySql($sql)->asArray()->all();
    	
    			// 订单状态
    			$val['status'] = chamei_order_status($val);
    		}
    	}
    	
    	$res['today'] = $timer['today'];
    	return $res;
    }
    
    /**
     * 检查过期没有确认收货的订单
     */
    public function check_order(){
    	
    	// 取出订单状态为发货状态的
    	$res = self::find()->where(['order_status'=>SHIPPED])->asArray()->all();
    	$id_str = null;
    	foreach ($res as $val){
    		$flag = null;
    		// 过期没有确认收货时间
    		if($val['shipping_time'] > 0){	
    			// 是否过期
    			$flag = time() > $val['shipping_time']+(24*3600*$_SESSION['cfg']['finish_time']);
    			
    			if($flag){
    				$id_str .= $val['order_id'].',';
    			}
    		}
    	}
    	
    	$id_str = rtrim($id_str,',');	
    	// 更新订单为已收货状态
    	if(!empty($id_str)){
    		self::updateAll(['confirm_time'=>time(),'order_status'=>FINISHED],"order_id IN ({$id_str})");
    	}
    	return true;
    }
    /**
     * 检查过期没有付款的订单
     */
    public function check_unpay(){
    	
    	// 取出订单状态为发货状态的
    	$res = self::find()->where(['order_status'=>UNPAYED])->asArray()->all();
    	$id_str = null;
    	foreach ($res as $val){
    		$flag = null;
    		
    		if($val['add_time'] > 0){
    			// 是否过期
    			$flag = time() > $val['add_time']+(24*3600*$_SESSION['cfg']['pay_time']);
    			
    			if($flag){
    				$id_str .= $val['order_id'].',';
    			}
    		}
    	}
    	$id_str = rtrim($id_str,',');
    	
    	// 更新订单为取消状态 ， 恢复商品库存
    	if(!empty($id_str)){
    		
	    		// 取出订单商品id
	    		$res = OrderGoods::find()->where("order_id IN ({$id_str})")->asArray()->all();
	    		
	    		if($res[0]){
	    			foreach ($res as $val){
	    			
	    				$num = intval($val['goods_number']);
	    				
	    				$sql = "UPDATE cm_goods SET goods_number=goods_number+{$num} WHERE goods_id=".$val['goods_id'];
	    				$row = yii::$app->db->createCommand($sql)->query();
	    		
	    			}
	    		}
	    		
	    		self::updateAll(['order_status'=>CANCEL],['order_id'=>[$id_str]]);
    	}
    	return true;
    }
    
    public function order_record($status){

    	$sql = "SELECT order_id FROM cm_order_info 
    			WHERE user_id={$_SESSION['frontend']['user_id']}{$status} ";
    
    	return  self::findBySql($sql)->count();
    }

}
